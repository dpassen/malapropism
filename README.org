# -*- coding: utf-8 -*-
* malapropism
[[file:.github/workflows/test.yaml][https://github.com/dpassen/malapropism/actions/workflows/test.yaml/badge.svg]]
[[file:.github/workflows/lint.yaml][https://github.com/dpassen/malapropism/actions/workflows/lint.yaml/badge.svg]]
[[file:.github/workflows/check.yaml][https://github.com/dpassen/malapropism/actions/workflows/check.yaml/badge.svg]]
[[file:.github/workflows/editorconfig.yaml][https://github.com/dpassen/malapropism/actions/workflows/editorconfig.yaml/badge.svg]]
[[https://clojars.org/org.passen/malapropism][https://img.shields.io/clojars/dt/org.passen/malapropism.svg?color=opal]]

An [[https://github.com/grammarly/omniconf][omniconf]] inspired config library using [[https://github.com/metosin/malli][malli]]
** Latest version
malapropism is deployed to [[https://clojars.org][Clojars]]

[[https://clojars.org/org.passen/malapropism][https://img.shields.io/clojars/v/org.passen/malapropism.svg]]
** Rationale
Configuration is one of the peripheries of our systems.
It's a good place to ensure correctness.
Enter [[https://github.com/metosin/malli][malli]], a library that I've really grown to appreciate.

Configuration should be flexible. Most solutions in this space assume too much.

With malapropism,
- Stick it in an atom? Yeah!
- Put it in a delay? Okay
- Keep it behind [[https://github.com/clojure/core.cache][core.cache]] or [[https://github.com/clojure/core.memoize][core.memoize]]? Sure, why not?
- Deliver it to a promise? I could see it
- Re-compute it each and every time? I wouldn’t


- Have a single configuration? Yeah, that makes sense
- Have more than one? No one's going to stop you
** Usage
#+BEGIN_SRC clojure
  (require '[org.passen.malapropism.core :as malapropism])

  (def config-schema
    [:map
     [:env-key :keyword]
     [:scm-rev :string]
     [:port :int]
     [:prefix
      {:default "/api"}
      :string]])

  (-> (malapropism/with-schema config-schema)
      (malapropism/with-values-from-env)
      (malapropism/with-values-from-system)
      (malapropism/with-values-from-map
        {:env-key :dev
         :scm-rev "923345"
         :port    8080
         :prefix  "/web"})
      (malapropism/verify! :verbose? true))
#+END_SRC
** License
Copyright © 2022-2023 Derek Passen

Released under an MIT license.
